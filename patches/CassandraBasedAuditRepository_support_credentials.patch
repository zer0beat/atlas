From f47d232e234630ca72a258fe5817afd454bc1ee4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Joel=20Llacer=20Mart=C3=ADnez?= <z0beat@gmail.com>
Date: Sun, 01 Oct 2020 18:15:00 +0200
Subject: [PATCH] Support Cassandra credentials

---
 .../audit/CassandraBasedAuditRepository.java           | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/repository/src/main/java/org/apache/atlas/repository/audit/CassandraBasedAuditRepository.java b/repository/src/main/java/org/apache/atlas/repository/audit/CassandraBasedAuditRepository.java
index 908e7f4e8..c1c3f3ef6 100644
--- a/repository/src/main/java/org/apache/atlas/repository/audit/CassandraBasedAuditRepository.java
+++ b/repository/src/main/java/org/apache/atlas/repository/audit/CassandraBasedAuditRepository.java
@@ -59,6 +59,8 @@ public class CassandraBasedAuditRepository extends AbstractStorageBasedAuditRepo
   private static final String DEFAULT_CLUSTER_NAME = "JanusGraph";
   // Default cassandra port
   private static final int DEFAULT_PORT = 9042;
+  private static final String DEFAULT_USERNAME = "cassandra";
+  private static final String DEFAULT_PASSWORD = "cassandra";
   private static final int DEFAULT_REPLICATION_FACTOR = 3;
   private static final String DEFAULT_REPLICATION_STRATEGY = "SimpleStrategy";
   private static final String DEFAULT_REPLICATION_OPTIONS = "'eu-west': 3";
@@ -69,6 +71,8 @@ public class CassandraBasedAuditRepository extends AbstractStorageBasedAuditRepo
   public static final String CASSANDRA_HOSTNAME_PROPERTY = "atlas.graph.storage.hostname";
   public static final String CASSANDRA_CLUSTERNAME_PROPERTY = "atlas.graph.storage.clustername";
   public static final String CASSANDRA_PORT_PROPERTY = "atlas.graph.storage.port";
+  public static final String CASSANDRA_USERNAME_PROPERTY = "atlas.graph.storage.username";
+  public static final String CASSANDRA_PASSWORD_PROPERTY = "atlas.graph.storage.password";
   public static final String CASSANDRA_REPLICATION_FACTOR_PROPERTY = "atlas.EntityAuditRepository.replicationFactor";
   public static final String CASSANDRA_AUDIT_KEYSPACE_PROPERTY = "atlas.EntityAuditRepository.keyspace";
   public static final String CASSANDRA_AUDIT_REPLICATION_STRATEGY_PROPERTY = "atlas.EntityAuditRepository.replicationStrategy";
@@ -103,6 +107,8 @@ public class CassandraBasedAuditRepository extends AbstractStorageBasedAuditRepo
   private Session cassSession;
   private String clusterName;
   private int port;
+  private String username;
+  private String password;
 
   private Map<String, List<String>> auditExcludedAttributesCache = new HashMap<>();
   private PreparedStatement insertStatement;
@@ -214,6 +220,8 @@ public class CassandraBasedAuditRepository extends AbstractStorageBasedAuditRepo
     replicationOptions = APPLICATION_PROPERTIES.getString(CASSANDRA_AUDIT_REPLICATION_OPTIONS_PROPERTY, DEFAULT_REPLICATION_OPTIONS);
     clusterName = APPLICATION_PROPERTIES.getString(CASSANDRA_CLUSTERNAME_PROPERTY, DEFAULT_CLUSTER_NAME);
     port = APPLICATION_PROPERTIES.getInt(CASSANDRA_PORT_PROPERTY, DEFAULT_PORT);
+    username = APPLICATION_PROPERTIES.getString(CASSANDRA_USERNAME_PROPERTY, DEFAULT_USERNAME);
+    password = APPLICATION_PROPERTIES.getString(CASSANDRA_PASSWORD_PROPERTY, DEFAULT_PASSWORD);
   }
 
   @VisibleForTesting
@@ -225,7 +233,7 @@ public class CassandraBasedAuditRepository extends AbstractStorageBasedAuditRepo
     Cluster.Builder cassandraClusterBuilder = Cluster.builder();
 
     String[] hostnames = APPLICATION_PROPERTIES.getString(CASSANDRA_HOSTNAME_PROPERTY, "localhost").split(":");
-    Cluster cluster = cassandraClusterBuilder.addContactPoints(hostnames).withClusterName(clusterName).withPort(port).build();
+    Cluster cluster = cassandraClusterBuilder.addContactPoints(hostnames).withClusterName(clusterName).withPort(port).withCredentials(username, password).build();
     try {
       cassSession = cluster.connect();
       if (cluster.getMetadata().getKeyspace(keyspace) == null) {
-- 
2.24.0

